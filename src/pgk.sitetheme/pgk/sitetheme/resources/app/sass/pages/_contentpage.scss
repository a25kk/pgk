.app-page {
  background: #fff;
  @include make-container();
  @include make-container-max-widths();
    @include media-breakpoint-up(sm) {
        margin-bottom: 2rem;
        //padding: 2rem;
    }
}

//== Page styles
//
//## Define content specific styles
.app-page__header {
    margin: 0;
    //border-bottom: 1px solid gray('400');
}

.app-page__title,
.app-page-title,
.app-page__headline,
.app-page-headline, {
    font-size: 1.5rem;
    color: $app-primary;
    margin-top: 1rem;
    margin-bottom: 2rem;
    @include media-breakpoint-up(md) {
    font-size: 1.8rem;
  }
}


// Use custom lead element for page desciptions
// that has proper line-height on all media types
.app-page-lead,
.app-page__abstract {
  margin-bottom: $spacer;
  font-size: 1rem;
  font-weight: 300;
  line-height: 1.5;
  background: $gray-100;
  padding: 1rem;
  @include when-inside('.template-frontpage-view') {
    background: transparent;
    padding: 0;
    margin-bottom: 2rem;
  }
  @include media-breakpoint-up(sm) {
    font-size: 1rem;
  }
}


//== Page section
//
//## Container providing visual separation
.app-page-section {
  margin: 1rem 0 2rem;
}


//
// Content specific image and media styles
//
// Should be removed or refacored to use proper base classes
// e.g. app-img
// Note: classes can easily be changed using the diazo transform chain
// or the tinymce configuration
.app-img {
	@extend .img-fluid;
  width: 100%;
}

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {
    margin-bottom: .5rem;
    font-family: inherit;
    font-weight: 700;
    line-height: 1.2;
    color: $app-primary;
}

.h2, h2 {
  font-size: 1.5rem;
}

.h3, h3 {
  font-size: 1.25rem;
}

.app-page-text {
  a {
    font-weight: 500;
  }
  ul {
    padding-left: 0;
    list-style-position: inside;
  }
}

// DEPRECATED
// Should be replaced with the more generic
// .app-page-embed class
.embed-responsive {
  margin-bottom: 1rem;
}

// Basic grid
.app-grid {
    margin-bottom: 1rem;
    @include make-row();
    margin-left: 0;
    margin-right: 0;
}
//== Teaser grid column sizes
$grid-item-sizes: (
    w12: 1,
    w16: 2,
    w25: 3,
    w33: 4,
    w50: 6,
    w66: 8,
    w75: 9,
    w100: 12,
);

@each $grid-item-size, $size-value in $grid-item-sizes {
    .app-grid__item--#{$grid-item-size} {
        @include when-inside('.app-grid') {
            @include make-col-ready();
            @include make-col(12);
            @include media-breakpoint-up(lg) {
                @include make-col($size-value);
                padding: 1rem 0;
                img {
                  padding: 0 2rem 1rem 0;
                }
            }
        }
    }
}
